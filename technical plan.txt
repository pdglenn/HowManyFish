Needed components:
- page with sliders
- chart showing dots layed out on circle based on match #
- python(?) function that calculates similarity based on slider inputs
- ajax(?) to re-calculate similarity based on slider inputs
- python/ajax to calculate aggregate statistics above certain match percentage

Overall update process:
Change sliders + hit "update" button
Create ajax request of Emily's answers + Emily's slider values
Ajax calls python function:
  def calc_similarity(emily_answers, emily_importance, similarity_threshold):
    ...
    return (people, agg_stats)

Where people is json in the format:
  { matches:
    [
      {name: Paul,
       similarity: 99.5
      },
      {name: Max,
       similarity: 22.4
      },
      {name: Andrea,
       similarity: 82.3
      }
    ]
  } // I think this is how JSON works but you get the point
Agg stats is in a similar format

Some thoughts on how to store the similarity data in memory:
I'm not sure exactly what the best way to do this is, but I think what you want is two scripts: one is called data.py and it opens a csv file and reads in everything to a python object of your choosing, let's say it's called people. Then another file can `import data` to make it available at global scope and refer to it from inside the calc_similarity function

Anyway, then the ajax call gets back the people and similarity json and can update the chart with it

